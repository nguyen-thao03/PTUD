<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        ICIiAiIgIiICIiAiIgIiIH//2Q==
</value>
  </data>
</root>